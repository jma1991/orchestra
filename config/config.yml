# Author: James Ashmore
# Copyright: Copyright 1010, James Ashmore
# Email: jashmore@ed.ac.uk
# License: MIT


# SingleCellExperiment object
input: ".tests/pbmc4k.rds"

# 
tximeta:
  # Source (e.g. "Ensembl")
  source: "Ensembl"
  # Organism (e.g. "Homo sapiens")
  organism: "Homo sapiens"
  # Release (e.g. "27")
  release: "27"
  # Genome (e.g. "GRCh38")
  genome: "GRCh38"

# Variables to use for batch effect removal and as factors to be ignored in 
# variance analysis. This should either be NULL or the cell cycle
# classification scores which are determined automatically during analysis. In
# addition, you may add any column name present in the column data.
model: "~ Score"


# Utilities for Handling Single-Cell Droplet Data
DropletUtils:
  # Calculate barcode ranks
  barcodeRanks:
    # A numeric scalar specifying the lower bound on the total UMI count, at or
    # below which all barcodes are assumed to correspond to empty droplets.
    lower: 100
  # Identify empty droplets
  emptyDrops:
    # A numeric scalar specifying the lower bound on the total UMI count, at or
    # below which all barcodes are assumed to correspond to empty droplets.
    lower: 100
    # An integer scalar specifying the number of iterations to use for the
    # Monte Carlo p-value calculations.
    niters: 10000
    # A numeric scalar specifying the lower bound on the total UMI count, at or
    # below which barcodes will be ignored.
    ignore: NULL
    # A numeric scalar specifying the threshold for the total UMI count above 
    # which all barcodes are assumed to contain cells.
    retain: NULL
    # Numeric scalar specifying the FDR threshold.
    FDR: 0.001


# Single-Cell RNA-Seq Analysis Utilities
scuttle:

  # Per-cell quality control metrics
  perCellQCMetrics:
    # A named list containing one or more vectors (a character vector of 
    # feature names, a logical vector, or a numeric vector of indices), used to
    # identify interesting feature subsets such as ERCC spike-in transcripts or
    # mitochondrial genes.
    subsets: "MT"
  
    # Quick cell-level QC
  quickPerCellQC:
    subsets: "MT"
    # A numeric scalar, specifying the minimum number of MADs away from median 
    # required for a value to be called an outlier.
    nmads: 3
  
  # Compute log-normalized expression values
  logNormCounts:
    # Logical scalar indicating whether normalized values should be 
    # log2-transformed
    log: TRUE
    # Logical scalar indicating whether downsampling should be performed prior 
    # to scaling and log-transformation
    downsample: FALSE


# Methods for Single-Cell RNA-Seq Data Analysis
scran:

  # Cell cycle phase classification
  cyclone:
    # A list of data.frames produced by sandbag, containing pairs of marker 
    # genes
    pairs: "human_cycle_markers.rds"
  
  # Identify HVGs
  getTopHVGs:
    # Integer scalar specifying the number of top HVGs to report.
    n: 1000
    # Numeric scalar specifying the proportion of genes to report as HVGs.
    prop: NULL
    # Numeric scalar specifying the minimum threshold on the metric of 
    # variation.
    var.threshold: 0
    # Numeric scalar specifying the FDR threshold.
    fdr.threshold: NULL
  




  

calculatePCA:
  ncomponents: 50

calculateTSNE:
  # Perplexity parameter
  perplexity: 30
  # Number of iterations
  max_iter: 2500

calculateUMAP:
  # Number of nearest neighbors
  n_neighbors: 15
  # Minimum distance between points
  min_dist: 0.5

parallelTSNE:
  # Perplexity parameter
  perplexity: [3, 5, 15, 30, 50, 100]
  # Number of iterations
  max_iter: [500, 1000, 1500, 2000, 2500, 3000]

parallelUMAP:
  # Number of nearest neighbors
  n_neighbors: [3, 5, 15, 30, 50, 100]
  # Minimum distance between points
  min_dist: [0, 0.01, 0.05, 0.1, 0.5, 1]




bluster:
  # Graph-based clustering
  NNGraphParam:
    # An integer scalar specifying the number of nearest neighbors to consider
    # during graph construction.
    k: 10
    # A string specifying the type of weighting scheme to use for shared
    # neighbors
    type: "rank"
    # Function specifying the method to use to detect communities in the NN
    # graph
    cluster.fun: "walktrap"
  # K-means clustering
  KmeansParam:
    centers: 10
  # Hierarchical clustering
  HclustParam:
    # String specifying the distance metric to use in dist
    metric: "euclidean"
    # String specifying the agglomeration method to use in hclust
    method: "ward.D2"

findDoubletClusters:
  isOutlier:
    # A numeric scalar, specifying the minimum number of MADs away from median 
    # required for a value to be called an outlier.
    nmads: 3


findStrippedClusters:
  isOutlier:
    # A numeric scalar, specifying the minimum number of MADs away from median 
    # required for a value to be called an outlier.
    nmads: 3


findMarkers:
  # String specifying the type of pairwise test to perform (e.g. "t", "wilcox", "binom")
  test.type: "t"
  # Direction of log-fold changes to be considered in the alternative hypothesis (e.g. "any", "up", "down")
  direction: "any"
  # log-fold change threshold to be tested against.
  lfc: 0
  # How p-values are to be combined across pairwise comparisons for a given group/cluster. c("any", "some", "all")
  pval.type: "any"

goana:
  species: "Hs"